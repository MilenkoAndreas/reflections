1.How did viewing a diff between two versions of a file help you see the bug that was introduced?

It was helpful, but it is hard to watch line by line to see the difference
between the two codes.

2.How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It allows you to compare versions, and if at some point your code has some problems, you can go back to your previous working version.

3.What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: You have the flexibility to choose when is relevant or not to commit.
Cons: Human mistake factor, that could lead to a potentially miss of commit when it was needed.

4.Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Beacause each is meant for different pruposes. Git is made for files that relate to each other in a complex way, while in google docs the relationship between files is more simple.

5.How can you use the commands git log and git diff to view the history of files?

Viewing the commits and the comparing them.








